<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Material Dash</title>
  <link rel="stylesheet" href="../assets/vendors/mdi/css/materialdesignicons.min.css">
  <link rel="stylesheet" href="../assets/vendors/css/vendor.bundle.base.css">
  <link rel="stylesheet" href="../assets/vendors/flag-icon-css/css/flag-icon.min.css">
  <link rel="stylesheet" href="../assets/vendors/jvectormap/jquery-jvectormap.css">
  <link rel="stylesheet" href="../assets/css/demo/style.css">
  <link rel="shortcut icon" href="../assets/images/favicon.png" />
</head>
<body>
<script src="../assets/js/preloader.js"></script>
  <div class="body-wrapper">
    <%- include('partials/_sidebar') %>
    <div class="main-wrapper mdc-drawer-app-content">
      <%-include('partials/_navbar') %>
      <div class="page-wrapper mdc-toolbar-fixed-adjust">
        <main class="content-wrapper">
          <div class="mdc-layout-grid">
            <div class="mdc-layout-grid__inner">

              <!-- Line Chart for Bookings Over Time -->
              <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-6-desktop">
                <div class="mdc-card">
                  <h6 class="card-title">Bookings Over Time</h6>
                  <canvas id="lineChart"></canvas>
                </div>
              </div>

              <!-- Bar Chart for Bookings Per Property -->
              <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-6-desktop">
                <div class="mdc-card">
                  <h6 class="card-title">Bookings Per Property</h6>
                  <canvas id="barChart"></canvas>
                </div>
              </div>

              <!-- Area Chart for Booking Status Breakdown -->
              <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-6-desktop">
                <div class="mdc-card">
                  <h6 class="card-title">Booking Status Breakdown</h6>
                  <canvas id="areaChart"></canvas>
                </div>
              </div>

              <!-- Doughnut Chart for Property Types -->
              <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-6-desktop">
                <div class="mdc-card">
                  <h6 class="card-title">Property Types Breakdown</h6>
                  <canvas id="doughnutChart"></canvas>
                </div>
              </div>

              <!-- Pie Chart for User Gender Distribution -->
              <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-6-desktop">
                <div class="mdc-card">
                  <h6 class="card-title">User Gender Distribution</h6>
                  <canvas id="pieChart"></canvas>
                </div>
              </div>

              <!-- Scatter Chart for Active Bookings -->
              <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-6-desktop">
                <div class="mdc-card">
                  <h6 class="card-title">Active Bookings</h6>
                  <canvas id="scatterChart"></canvas>
                </div>
              </div>

              <!-- New Doughnut Chart for Bookings by Property Type -->
<div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-6-desktop">
  <div class="mdc-card">
    <h6 class="card-title">Bookings by Property Type</h6>
    <canvas id="bookingsByPropertyTypeChart"></canvas>
  </div>
</div>



            </div>
          </div>
        </main>
        <footer></footer>
      </div>
    </div>
  </div>

  <!-- Injecting Chart Data into Scripts -->
  <script src="../assets/vendors/js/vendor.bundle.base.js"></script>
  <script src="../assets/vendors/chartjs/Chart.min.js"></script>
  <script src="../assets/js/material.js"></script>
  <script src="../assets/js/misc.js"></script>

  <!-- Charts Initialization and Data Insertion -->
  <script>
    // Data from the backend (pass through EJS)
    const bookingsOverTime = <%- JSON.stringify(bookingsOverTime) %>;
    const bookingsPerProperty = <%- JSON.stringify(bookingsPerProperty) %>;
    // Pass the new bookingsByPropertyType data
const bookingsByPropertyType = <%- JSON.stringify(bookingsByPropertyType) %>;

    const confirmedBookings = <%= confirmedBookings %>;
    const pendingBookings = <%= pendingBookings %>;
    const cancelledBookings = <%= cancelledBookings %>;
    const totalBookings = <%= totalBookings %>;
    const pgProperties = <%= pgProperties %>;
    const hostelProperties = <%= hostelProperties %>;
    const flatProperties = <%= flatProperties %>;
    const pgWithMessProperties = <%= pgWithMessProperties %>;
    const maleProperties = <%= maleProperties %>;
    const femaleProperties = <%= femaleProperties %>;
    const activeBookings = <%= activeBookings %>;

    // Line Chart (Bookings Over Time)
    new Chart(document.getElementById('lineChart').getContext('2d'), {
      type: 'line',
      data: {
        labels: bookingsOverTime.map(item => item._id),
        datasets: [{
          label: 'Bookings',
          data: bookingsOverTime.map(item => item.count),
          backgroundColor: 'rgba(75, 192, 192, 0.2)',
          borderColor: 'rgba(75, 192, 192, 1)',
          borderWidth: 1
        }]
      }
    });

    // Bar Chart (Bookings Per Property)
    new Chart(document.getElementById('barChart').getContext('2d'), {
      type: 'bar',
      data: {
        labels: bookingsPerProperty.map(item => item.propertyName),
        datasets: [{
          label: 'Total Bookings',
          data: bookingsPerProperty.map(item => item.total),
          backgroundColor: 'rgba(153, 102, 255, 0.2)',
          borderColor: 'rgba(153, 102, 255, 1)',
          borderWidth: 1
        }]
      }
    });

    // Area Chart (Booking Status Breakdown)
    new Chart(document.getElementById('areaChart').getContext('2d'), {
      type: 'line',
      data: {
        labels: ['Confirmed', 'Pending', 'Cancelled'],
        datasets: [{
          label: 'Bookings',
          data: [confirmedBookings, pendingBookings, cancelledBookings],
          backgroundColor: 'rgba(54, 162, 235, 0.2)',
          borderColor: 'rgba(54, 162, 235, 1)',
          borderWidth: 1
        }]
      }
    });

    // Doughnut Chart (Property Types Breakdown)
    new Chart(document.getElementById('doughnutChart').getContext('2d'), {
      type: 'doughnut',
      data: {
        labels: ['PG', 'Hostel', 'Flat', 'PG with Mess'],
        datasets: [{
          label: 'Property Types',
          data: [pgProperties, hostelProperties, flatProperties, pgWithMessProperties],
          backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)'],
          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)'],
          borderWidth: 1
        }]
      }
    });

    // Pie Chart (User Gender Distribution)
    new Chart(document.getElementById('pieChart').getContext('2d'), {
      type: 'pie',
      data: {
        labels: ['Male', 'Female'],
        datasets: [{
          label: 'Users',
          data: [maleProperties, femaleProperties],
          backgroundColor: ['rgba(255, 159, 64, 0.2)', 'rgba(255, 99, 132, 0.2)'],
          borderColor: ['rgba(255, 159, 64, 1)', 'rgba(255, 99, 132, 1)'],
          borderWidth: 1
        }]
      }
    });

    // Scatter Chart (Active Bookings)
    new Chart(document.getElementById('scatterChart').getContext('2d'), {
      type: 'scatter',
      data: {
        datasets: [{
          label: 'Active Bookings',
          data: [{ x: 1, y: activeBookings }],
          backgroundColor: 'rgba(75, 192, 192, 0.2)',
          borderColor: 'rgba(75, 192, 192, 1)',
          borderWidth: 1
        }]
      }
    });

    // Doughnut Chart for Bookings by Property Type
new Chart(document.getElementById('bookingsByPropertyTypeChart').getContext('2d'), {
  type: 'doughnut',
  data: {
    labels: bookingsByPropertyType.map(item => item._id), // Property types (PG, Hostel, etc.)
    datasets: [{
      label: 'Bookings',
      data: bookingsByPropertyType.map(item => item.count), // Booking counts
      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)'],
      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)'],
      borderWidth: 1
    }]
  }
});

    
  </script>
</body>
</html>
